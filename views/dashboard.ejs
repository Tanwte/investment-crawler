<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Singapore-Korea Trade Intelligence Dashboard</title>
  <link rel="stylesheet" href="/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .dashboard-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .dashboard-header {
      background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
      color: white;
      padding: 30px;
      border-radius: 12px;
      margin-bottom: 30px;
      text-align: center;
    }
    
    .dashboard-nav {
      display: flex;
      gap: 20px;
      margin-bottom: 30px;
      flex-wrap: wrap;
      align-items: center;
    }
    
    .filter-group {
      display: flex;
      gap: 10px;
      align-items: center;
    }
    
    .filter-select {
      padding: 8px 12px;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      background: white;
    }
    
    .export-btn {
      background: #059669;
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }
    
    .export-btn:hover {
      background: #047857;
    }
    
    .metrics-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .metric-card {
      background: white;
      padding: 24px;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      border: 1px solid #e5e7eb;
    }
    
    .metric-value {
      font-size: 2.5em;
      font-weight: bold;
      color: #1f2937;
      margin-bottom: 8px;
    }
    
    .metric-label {
      color: #6b7280;
      font-size: 0.9em;
      margin-bottom: 12px;
    }
    
    .metric-trend {
      display: flex;
      align-items: center;
      gap: 6px;
      font-size: 0.85em;
    }
    
    .trend-up { color: #059669; }
    .trend-down { color: #dc2626; }
    .trend-flat { color: #6b7280; }
    
    .charts-section {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 30px;
      margin-bottom: 30px;
    }
    
    .chart-container {
      background: white;
      padding: 24px;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      border: 1px solid #e5e7eb;
    }
    
    .chart-title {
      font-size: 1.2em;
      font-weight: bold;
      margin-bottom: 20px;
      color: #1f2937;
    }
    
    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .category-card {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      border: 1px solid #e5e7eb;
    }
    
    .category-header {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 16px;
    }
    
    .category-icon {
      font-size: 1.5em;
    }
    
    .category-name {
      font-weight: bold;
      flex: 1;
    }
    
    .category-count {
      background: #f3f4f6;
      color: #374151;
      padding: 4px 12px;
      border-radius: 20px;
      font-size: 0.85em;
      font-weight: bold;
    }
    
    .category-percentage {
      color: #6b7280;
      font-size: 0.9em;
      margin-bottom: 12px;
    }
    
    .progress-bar {
      width: 100%;
      height: 8px;
      background: #f3f4f6;
      border-radius: 4px;
      overflow: hidden;
    }
    
    .progress-fill {
      height: 100%;
      border-radius: 4px;
      transition: width 0.3s ease;
    }
    
    .content-section {
      background: white;
      border-radius: 12px;
      padding: 24px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      border: 1px solid #e5e7eb;
    }
    
    .content-item {
      border-bottom: 1px solid #f3f4f6;
      padding: 16px 0;
    }
    
    .content-item:last-child {
      border-bottom: none;
    }
    
    .content-meta {
      display: flex;
      gap: 16px;
      align-items: center;
      margin-bottom: 8px;
      flex-wrap: wrap;
    }
    
    .content-category {
      display: inline-flex;
      align-items: center;
      gap: 6px;
      background: #f3f4f6;
      padding: 4px 10px;
      border-radius: 12px;
      font-size: 0.8em;
    }
    
    .content-confidence {
      font-size: 0.8em;
      color: #6b7280;
    }
    
    .content-url {
      color: #2563eb;
      text-decoration: none;
      font-weight: 500;
      margin-bottom: 8px;
      display: block;
    }
    
    .content-preview {
      color: #4b5563;
      font-size: 0.9em;
      line-height: 1.5;
    }
    
    @media (max-width: 768px) {
      .charts-section {
        grid-template-columns: 1fr;
      }
      
      .dashboard-nav {
        flex-direction: column;
        align-items: stretch;
      }
      
      .filter-group {
        flex-direction: column;
        align-items: stretch;
      }
    }
  </style>
</head>
<body>
  <div class="dashboard-container">
    <div class="dashboard-header">
      <h1>üá∏üá¨ü§ùüá∞üá∑ Singapore-Korea Trade Intelligence Dashboard</h1>
      <p>Real-time monitoring of bilateral trade relationships, investment flows, and market opportunities</p>
    </div>

    <div class="dashboard-nav">
      <div class="filter-group">
        <label>Time Range:</label>
        <select class="filter-select" id="timeRange" onchange="updateDashboard()">
          <option value="7d" <%= timeRange === '7d' ? 'selected' : '' %>>Last 7 days</option>
          <option value="30d" <%= timeRange === '30d' ? 'selected' : '' %>>Last 30 days</option>
          <option value="90d" <%= timeRange === '90d' ? 'selected' : '' %>>Last 90 days</option>
          <option value="1y" <%= timeRange === '1y' ? 'selected' : '' %>>Last year</option>
        </select>
      </div>

      <div class="filter-group">
        <label>Category:</label>
        <select class="filter-select" id="category" onchange="updateDashboard()">
          <option value="all" <%= category === 'all' ? 'selected' : '' %>>All Categories</option>
          <% Object.entries(categories).forEach(([key, cat]) => { %>
            <option value="<%= key %>" <%= category === key ? 'selected' : '' %>>
              <%= cat.icon %> <%= cat.name %>
            </option>
          <% }) %>
        </select>
      </div>

      <div class="filter-group">
        <a href="/export?format=json&range=<%= timeRange %>&category=<%= category %>" class="export-btn">
          üìÑ Export JSON
        </a>
        <a href="/export?format=csv&range=<%= timeRange %>&category=<%= category %>" class="export-btn">
          üìä Export CSV
        </a>
      </div>
    </div>

    <div class="metrics-grid">
      <div class="metric-card">
        <div class="metric-value"><%= totalContent %></div>
        <div class="metric-label">Total Intelligence Items</div>
        <div class="metric-trend">
          <% const trend = analytics.totalTrend %>
          <% if (trend > 0.1) { %>
            <span class="trend-up">‚ÜóÔ∏è +<%= Math.round(trend * 100) %>%</span>
          <% } else if (trend < -0.1) { %>
            <span class="trend-down">‚ÜòÔ∏è <%= Math.round(trend * 100) %>%</span>
          <% } else { %>
            <span class="trend-flat">‚Üí Stable</span>
          <% } %>
        </div>
      </div>

      <div class="metric-card">
        <div class="metric-value"><%= Math.round(analytics.avgConfidence * 100) %>%</div>
        <div class="metric-label">Average Classification Confidence</div>
        <div class="metric-trend">
          <% if (analytics.qualityScore > 0.7) { %>
            <span class="trend-up">üü¢ High Quality</span>
          <% } else if (analytics.qualityScore > 0.4) { %>
            <span class="trend-flat">üü° Medium Quality</span>
          <% } else { %>
            <span class="trend-down">üî¥ Needs Review</span>
          <% } %>
        </div>
      </div>

      <div class="metric-card">
        <div class="metric-value"><%= sessionStats.length %></div>
        <div class="metric-label">Active Crawl Sessions</div>
        <div class="metric-trend">
          <span class="trend-flat">üï∑Ô∏è Monitoring</span>
        </div>
      </div>

      <div class="metric-card">
        <div class="metric-value"><%= trendingCategories.length %></div>
        <div class="metric-label">Active Categories</div>
        <div class="metric-trend">
          <% if (trendingCategories.length > 0) { %>
            <span class="trend-up">üìà <%= trendingCategories[0].name %> Leading</span>
          <% } else { %>
            <span class="trend-flat">üîç Discovering</span>
          <% } %>
        </div>
      </div>
    </div>

    <div class="charts-section">
      <div class="chart-container">
        <div class="chart-title">Content Volume Trend</div>
        <canvas id="volumeChart" width="400" height="200"></canvas>
      </div>

      <div class="chart-container">
        <div class="chart-title">Category Distribution</div>
        <canvas id="categoryChart" width="400" height="200"></canvas>
      </div>
    </div>

    <div class="categories-grid">
      <% trendingCategories.forEach(cat => { %>
        <div class="category-card">
          <div class="category-header">
            <span class="category-icon"><%= categories[cat.key].icon %></span>
            <span class="category-name"><%= cat.name %></span>
            <span class="category-count"><%= cat.count %></span>
          </div>
          <div class="category-percentage"><%= Math.round(cat.percentage) %>% of total content</div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: <%= cat.percentage %>%; background-color: <%= categories[cat.key].color %>;"></div>
          </div>
        </div>
      <% }) %>
    </div>

    <div class="content-section">
      <h2>Latest Intelligence</h2>
      <p><%= contentSummary.summary %></p>
      
      <% if (classifiedContent.length > 0) { %>
        <% classifiedContent.slice(0, 20).forEach(item => { %>
          <div class="content-item">
            <div class="content-meta">
              <% if (item.classification.primaryCategory) { %>
                <span class="content-category" style="background-color: <%= item.classification.primaryCategory.color %>20; color: <%= item.classification.primaryCategory.color %>;">
                  <%= item.classification.primaryCategory.icon %> <%= item.classification.primaryCategory.name %>
                </span>
              <% } %>
              <span class="content-confidence">
                Confidence: <%= Math.round(item.classification.confidence * 100) %>%
              </span>
              <% if (item.isDeepLink) { %>
                <span class="content-category" style="background-color: #059669; color: white;">
                  üîó Deep Article
                </span>
              <% } %>
            </div>
            <a href="<%= item.url %>" class="content-url" target="_blank"><%= item.url %></a>
            <div class="content-preview">
              <%= item.content.substring(0, 300) %>...
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p>No content available for the selected filters. Try adjusting the time range or category.</p>
      <% } %>
    </div>
  </div>

  <script>
    // Update dashboard when filters change
    function updateDashboard() {
      const timeRange = document.getElementById('timeRange').value;
      const category = document.getElementById('category').value;
      window.location.href = `/dashboard?range=${timeRange}&category=${category}`;
    }

    // Initialize charts
    document.addEventListener('DOMContentLoaded', function() {
      // Fetch analytics data and render charts
      fetch(`/api/analytics?range=<%= timeRange %>`)
        .then(response => response.json())
        .then(data => {
          renderVolumeChart(data.dailyVolume);
          renderCategoryChart(data.categories);
        })
        .catch(error => console.error('Error loading analytics:', error));
    });

    function renderVolumeChart(dailyVolume) {
      const ctx = document.getElementById('volumeChart').getContext('2d');
      
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: dailyVolume.map(d => new Date(d.date).toLocaleDateString()),
          datasets: [{
            label: 'Total Content',
            data: dailyVolume.map(d => d.count),
            borderColor: '#3b82f6',
            backgroundColor: 'rgba(59, 130, 246, 0.1)',
            tension: 0.4,
            fill: true
          }, {
            label: 'Deep Links',
            data: dailyVolume.map(d => d.deep_links),
            borderColor: '#059669',
            backgroundColor: 'rgba(5, 150, 105, 0.1)',
            tension: 0.4
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top',
            }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }

    function renderCategoryChart(categories) {
      const ctx = document.getElementById('categoryChart').getContext('2d');
      
      const colors = categories.map(cat => {
        const colorMap = {
          'GOVERNMENT_POLICY': '#4CAF50',
          'INVESTMENT_FLOWS': '#FF9800',
          'TRADE_RELATIONS': '#2196F3',
          'MARKET_ANALYSIS': '#9C27B0',
          'CORPORATE_NEWS': '#607D8B',
          'TECHNOLOGY_INNOVATION': '#00BCD4',
          'FINANCIAL_SERVICES': '#795548',
          'INFRASTRUCTURE': '#FF5722'
        };
        return colorMap[cat.key] || '#6b7280';
      });
      
      new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: categories.map(cat => cat.name),
          datasets: [{
            data: categories.map(cat => cat.count),
            backgroundColor: colors,
            borderWidth: 2,
            borderColor: '#ffffff'
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom',
            }
          }
        }
      });
    }
  </script>
</body>
</html>